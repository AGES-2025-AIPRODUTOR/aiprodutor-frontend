stages:
  - build
  - deploy

build_frontend:
  stage: build
  image: node:20-alpine
  tags:
    - docker
  script:
    - echo "Instalando dependências..."
    - npm install
    - echo "Compilando o projeto (verificando se não há erros)..."
    - npx next build --no-lint


sync_to_github:
  stage: deploy
  image: node:20-alpine
  tags:
    - docker
  
  before_script:
    - echo "Instalando o Git..."
    - apk update && apk add git

  script:
    - echo "Branch de origem:${CI_COMMIT_REF_NAME}"
    - git config --global user.email "pipeline@gitlab.com"
    - git config --global user.name "GitLab Pipeline"
    
    - git fetch --unshallow || true
    
    - git checkout -B "${CI_COMMIT_REF_NAME}"
    
    - git remote remove github || true
    - git remote add github "https://AGES-2025-AIPRODUTOR:${GITHUB_TOKEN}@github.com/AGES-2025-AIPRODUTOR/aiprodutor-frontend.git"
    
    - echo "Enviando de '${CI_COMMIT_REF_NAME}' para a branch '${CI_COMMIT_REF_NAME}' no GitHub..."
    - git push github HEAD:${CI_COMMIT_REF_NAME} -o ci.skip --force
    # ----------------------
    
    - echo "SINCRONIZAÇÃO COM GITHUB CONCLUÍDA!"
  rules:
    - if: '$CI_COMMIT_BRANCH == "developer" || $CI_COMMIT_BRANCH == "main"'
    # ----------------------